{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 490e8044e490ed1312a2","webpack:///./js/app.js","webpack:///../~/prismjs/prism.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","self","window","WorkerGlobalScope","Prism","lang","_","util","encode","tokens","Token","type","content","alias","map","replace","o","Object","prototype","toString","match","clone","key","hasOwnProperty","v","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","value","this","callback","i","highlightAll","async","element","elements","document","querySelectorAll","highlightElement","language","parent","test","className","parentNode","nodeName","code","textContent","env","hooks","run","Worker","worker","filename","onmessage","evt","highlightedCode","stringify","JSON","parse","data","innerHTML","postMessage","highlight","text","tokenize","strarr","rest","tokenloop","patterns","j","pattern","lookbehind","lookbehindLength","str","lastIndex","exec","from","index","slice","len","to","after","args","push","wrapped","Array","splice","apply","all","add","name","callbacks","join","tag","classes","attributes","aliases","addEventListener","message","close","script","getElementsByTagName","src","hasAttribute","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","css","atrule","url","selector","string","property","important","function","style","style-attr","clike","class-name","keyword","boolean","number","operator","ignore","javascript","regex","querySelector","fileHighlight","Extensions","js","html","svg","xml","py","rb","ps1","psm1","forEach","pre","getAttribute","extension","createElement","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","statusText","send"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!*******************!*\\\n  !*** ./js/app.js ***!\n  \\*******************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(/*! prismjs */ 1);\n\n/***/ },\n/* 1 */\n/*!*****************************!*\\\n  !*** ../~/prismjs/prism.js ***!\n  \\*****************************/\n/***/ function(module, exports) {\n\n\t\n\t/* **********************************************\n\t     Begin prism-core.js\n\t********************************************** */\n\t\n\tself = (typeof window !== 'undefined')\n\t\t? window   // if in browser\n\t\t: (\n\t\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t\t);\n\t\n\t/**\n\t * Prism: Lightweight, robust, elegant syntax highlighting\n\t * MIT license http://www.opensource.org/licenses/mit-license.php/\n\t * @author Lea Verou http://lea.verou.me\n\t */\n\t\n\tvar Prism = (function(){\n\t\n\t// Private helper vars\n\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\n\tvar _ = self.Prism = {\n\t\tutil: {\n\t\t\tencode: function (tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t\t},\n\t\n\t\t\t// Deep clone a language definition (e.g. to extend it)\n\t\t\tclone: function (o) {\n\t\t\t\tvar type = _.util.type(o);\n\t\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tvar clone = {};\n\t\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn clone;\n\t\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\treturn o.map(function(v) { return _.util.clone(v); });\n\t\t\t\t}\n\t\n\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\t\n\t\tlanguages: {\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\t\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\t\n\t\t\t\treturn lang;\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Insert a token before another token in a language literal\n\t\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t\t * @param inside The key (or language id) of the parent\n\t\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t\t * @param insert Object with the key/value pairs to insert\n\t\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || _.languages;\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t\n\t\t\t\tif (arguments.length == 2) {\n\t\t\t\t\tinsert = arguments[1];\n\t\t\t\t\t\n\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn grammar;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar ret = {};\n\t\n\t\t\t\tfor (var token in grammar) {\n\t\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\t\n\t\t\t\t\t\tif (token == before) {\n\t\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\treturn root[inside] = ret;\n\t\t\t},\n\t\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function(o, callback, type) {\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\t\n\t\t\t\t\t\tif (_.util.type(o[i]) === 'Object') {\n\t\t\t\t\t\t\t_.languages.DFS(o[i], callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (_.util.type(o[i]) === 'Array') {\n\t\t\t\t\t\t\t_.languages.DFS(o[i], callback, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\thighlightAll: function(async, callback) {\n\t\t\tvar elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\n\t\n\t\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t\t_.highlightElement(element, async === true, callback);\n\t\t\t}\n\t\t},\n\t\n\t\thighlightElement: function(element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language, grammar, parent = element;\n\t\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (parent.className.match(lang) || [,''])[1];\n\t\t\t\tgrammar = _.languages[language];\n\t\t\t}\n\t\n\t\t\tif (!grammar) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Set language on the element, if not present\n\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\t\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\n\t\t\tvar code = element.textContent;\n\t\n\t\t\tif(!code) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tcode = code.replace(/^(?:\\r?\\n|\\r)/,'');\n\t\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\t\n\t\t\t_.hooks.run('before-highlight', env);\n\t\n\t\t\tif (async && self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\t\n\t\t\t\tworker.onmessage = function(evt) {\n\t\t\t\t\tenv.highlightedCode = Token.stringify(JSON.parse(evt.data), language);\n\t\n\t\t\t\t\t_.hooks.run('before-insert', env);\n\t\n\t\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\n\t\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t};\n\t\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\t\n\t\t\t\t_.hooks.run('before-insert', env);\n\t\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\n\t\t\t\tcallback && callback.call(element);\n\t\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t}\n\t\t},\n\t\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar tokens = _.tokenize(text, grammar);\n\t\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t\t},\n\t\n\t\ttokenize: function(text, grammar, language) {\n\t\t\tvar Token = _.Token;\n\t\n\t\t\tvar strarr = [text];\n\t\n\t\t\tvar rest = grammar.rest;\n\t\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\t\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\t\n\t\t\ttokenloop: for (var token in grammar) {\n\t\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tvar patterns = grammar[token];\n\t\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\t\n\t\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\t\talias = pattern.alias;\n\t\n\t\t\t\t\tpattern = pattern.pattern || pattern;\n\t\n\t\t\t\t\tfor (var i=0; i<strarr.length; i++) { // Don’t cache length as it changes during the loop\n\t\n\t\t\t\t\t\tvar str = strarr[i];\n\t\n\t\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\t\n\t\t\t\t\t\tvar match = pattern.exec(str);\n\t\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar from = match.index - 1 + lookbehindLength,\n\t\t\t\t\t\t\t\tmatch = match[0].slice(lookbehindLength),\n\t\t\t\t\t\t\t\tlen = match.length,\n\t\t\t\t\t\t\t\tto = from + len,\n\t\t\t\t\t\t\t\tbefore = str.slice(0, from + 1),\n\t\t\t\t\t\t\t\tafter = str.slice(to + 1);\n\t\n\t\t\t\t\t\t\tvar args = [i, 1];\n\t\n\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias);\n\t\n\t\t\t\t\t\t\targs.push(wrapped);\n\t\n\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn strarr;\n\t\t},\n\t\n\t\thooks: {\n\t\t\tall: {},\n\t\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\t\n\t\t\t\thooks[name] = hooks[name] || [];\n\t\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\t\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\t\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar Token = _.Token = function(type, content, alias) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t\tthis.alias = alias;\n\t};\n\t\n\tToken.stringify = function(o, language, parent) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\n\t\tif (_.util.type(o) === 'Array') {\n\t\t\treturn o.map(function(element) {\n\t\t\t\treturn Token.stringify(element, language, o);\n\t\t\t}).join('');\n\t\t}\n\t\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: Token.stringify(o.content, language, parent),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language,\n\t\t\tparent: parent\n\t\t};\n\t\n\t\tif (env.type == 'comment') {\n\t\t\tenv.attributes['spellcheck'] = 'true';\n\t\t}\n\t\n\t\tif (o.alias) {\n\t\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t}\n\t\n\t\t_.hooks.run('wrap', env);\n\t\n\t\tvar attributes = '';\n\t\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += name + '=\"' + (env.attributes[name] || '') + '\"';\n\t\t}\n\t\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t\n\t};\n\t\n\tif (!self.document) {\n\t\tif (!self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn self.Prism;\n\t\t}\n\t \t// In worker\n\t\tself.addEventListener('message', function(evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t    lang = message.language,\n\t\t\t    code = message.code;\n\t\n\t\t\tself.postMessage(JSON.stringify(_.util.encode(_.tokenize(code, _.languages[lang]))));\n\t\t\tself.close();\n\t\t}, false);\n\t\n\t\treturn self.Prism;\n\t}\n\t\n\t// Get current script and highlight\n\tvar script = document.getElementsByTagName('script');\n\t\n\tscript = script[script.length - 1];\n\t\n\tif (script) {\n\t\t_.filename = script.src;\n\t\n\t\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n\t\n\treturn self.Prism;\n\t\n\t})();\n\t\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = Prism;\n\t}\n\t\n\t\n\t/* **********************************************\n\t     Begin prism-markup.js\n\t********************************************** */\n\t\n\tPrism.languages.markup = {\n\t\t'comment': /<!--[\\w\\W]*?-->/,\n\t\t'prolog': /<\\?.+?\\?>/,\n\t\t'doctype': /<!DOCTYPE.+?>/,\n\t\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t\t'tag': {\n\t\t\tpattern: /<\\/?[\\w:-]+\\s*(?:\\s+[\\w:-]+(?:=(?:(\"|')(\\\\?[\\w\\W])*?\\1|[^\\s'\">=]+))?\\s*)*\\/?>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /^<\\/?[\\w:-]+/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t\t'namespace': /^[\\w-]+?:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /=|>|\"/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\/?>/,\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /[\\w:-]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'namespace': /^[\\w-]+?:/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i\n\t};\n\t\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function(env) {\n\t\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\t\n\t\n\t/* **********************************************\n\t     Begin prism-css.js\n\t********************************************** */\n\t\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[;:]/\n\t\t\t}\n\t\t},\n\t\t'url': /url\\((?:([\"'])(\\\\\\n|\\\\?.)*?\\1|.*?)\\)/i,\n\t\t'selector': /[^\\{\\}\\s][^\\{\\};]*(?=\\s*\\{)/,\n\t\t'string': /(\"|')(\\\\\\n|\\\\?.)*?\\1/,\n\t\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t\t'important': /\\B!important\\b/i,\n\t\t'punctuation': /[\\{\\};:]/,\n\t\t'function': /[-a-z0-9]+(?=\\()/i\n\t};\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'style': {\n\t\t\t\tpattern: /<style[\\w\\W]*?>[\\w\\W]*?<\\/style>/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'tag': {\n\t\t\t\t\t\tpattern: /<style[\\w\\W]*?>|<\\/style>/i,\n\t\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.css\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t});\n\t\t\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, Prism.languages.markup.tag);\n\t}\n\t\n\t/* **********************************************\n\t     Begin prism-clike.js\n\t********************************************** */\n\t\n\tPrism.languages.clike = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'string': /(\"|')(\\\\\\n|\\\\?.)*?\\1/,\n\t\t'class-name': {\n\t\t\tpattern: /((?:(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t\t'boolean': /\\b(true|false)\\b/,\n\t\t'function': {\n\t\t\tpattern: /[a-z0-9_]+\\(/i,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\(/\n\t\t\t}\n\t\t},\n\t\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,\n\t\t'operator': /[-+]{1,2}|!|<=?|>=?|={1,3}|&{1,2}|\\|?\\||\\?|\\*|\\/|~|\\^|%/,\n\t\t'ignore': /&(lt|gt|amp);/i,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\t\n\t\n\t/* **********************************************\n\t     Begin prism-javascript.js\n\t********************************************** */\n\t\n\tPrism.languages.javascript = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|function|get|if|implements|import|in|instanceof|interface|let|new|null|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/,\n\t\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|-?Infinity)\\b/,\n\t\t'function': /(?!\\d)[a-z0-9_$]+(?=\\()/i\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'regex': {\n\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'script': {\n\t\t\t\tpattern: /<script[\\w\\W]*?>[\\w\\W]*?<\\/script>/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'tag': {\n\t\t\t\t\t\tpattern: /<script[\\w\\W]*?>|<\\/script>/i,\n\t\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t},\n\t\t\t\talias: 'language-javascript'\n\t\t\t}\n\t\t});\n\t}\n\t\n\t\n\t/* **********************************************\n\t     Begin prism-file-highlight.js\n\t********************************************** */\n\t\n\t(function () {\n\t\tif (!self.Prism || !self.document || !document.querySelector) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tself.Prism.fileHighlight = function() {\n\t\n\t\t\tvar Extensions = {\n\t\t\t\t'js': 'javascript',\n\t\t\t\t'html': 'markup',\n\t\t\t\t'svg': 'markup',\n\t\t\t\t'xml': 'markup',\n\t\t\t\t'py': 'python',\n\t\t\t\t'rb': 'ruby',\n\t\t\t\t'ps1': 'powershell',\n\t\t\t\t'psm1': 'powershell'\n\t\t\t};\n\t\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function(pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [,''])[1];\n\t\t\t\tvar language = Extensions[extension] || extension;\n\t\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\t\n\t\t\t\tpre.textContent = '';\n\t\n\t\t\t\tcode.textContent = 'Loading…';\n\t\n\t\t\t\tpre.appendChild(code);\n\t\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\n\t\t\t\txhr.open('GET', src, true);\n\t\n\t\t\t\txhr.onreadystatechange = function() {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\t\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\n\t\t};\n\t\n\t\tself.Prism.fileHighlight();\n\t\n\t})();\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 490e8044e490ed1312a2\n **/","import 'prismjs';\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/app.js\n **/","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nself = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\nvar _ = self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\treturn o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\t\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\t\t\t\t\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn grammar;\n\t\t\t}\n\t\t\t\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type) {\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object') {\n\t\t\t\t\t\t_.languages.DFS(o[i], callback);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array') {\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\thighlightAll: function(async, callback) {\n\t\tvar elements = document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code');\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1];\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\tif (!grammar) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tif(!code) {\n\t\t\treturn;\n\t\t}\n\n\t\tcode = code.replace(/^(?:\\r?\\n|\\r)/,'');\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = Token.stringify(JSON.parse(evt.data), language);\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\tfor (var i=0; i<strarr.length; i++) { // Don’t cache length as it changes during the loop\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index - 1 + lookbehindLength,\n\t\t\t\t\t\t\tmatch = match[0].slice(lookbehindLength),\n\t\t\t\t\t\t\tlen = match.length,\n\t\t\t\t\t\t\tto = from + len,\n\t\t\t\t\t\t\tbefore = str.slice(0, from + 1),\n\t\t\t\t\t\t\tafter = str.slice(to + 1);\n\n\t\t\t\t\t\tvar args = [i, 1];\n\n\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias);\n\n\t\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\n\tfor (var name in env.attributes) {\n\t\tattributes += name + '=\"' + (env.attributes[name] || '') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\" ' + attributes + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!self.document) {\n\tif (!self.addEventListener) {\n\t\t// in Node.js\n\t\treturn self.Prism;\n\t}\n \t// In worker\n\tself.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code;\n\n\t\tself.postMessage(JSON.stringify(_.util.encode(_.tokenize(code, _.languages[lang]))));\n\t\tself.close();\n\t}, false);\n\n\treturn self.Prism;\n}\n\n// Get current script and highlight\nvar script = document.getElementsByTagName('script');\n\nscript = script[script.length - 1];\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t}\n}\n\nreturn self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?.+?\\?>/,\n\t'doctype': /<!DOCTYPE.+?>/,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?[\\w:-]+\\s*(?:\\s+[\\w:-]+(?:=(?:(\"|')(\\\\?[\\w\\W])*?\\1|[^\\s'\">=]+))?\\s*)*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[\\w:-]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[\\w-]+?:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /=|>|\"/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[\\w:-]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[\\w-]+?:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'punctuation': /[;:]/\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\\\n|\\\\?.)*?\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*(?=\\s*\\{)/,\n\t'string': /(\"|')(\\\\\\n|\\\\?.)*?\\1/,\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'punctuation': /[\\{\\};:]/,\n\t'function': /[-a-z0-9]+(?=\\()/i\n};\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /<style[\\w\\W]*?>[\\w\\W]*?<\\/style>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /<style[\\w\\W]*?>|<\\/style>/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.css\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': /(\"|')(\\\\\\n|\\\\?.)*?\\1/,\n\t'class-name': {\n\t\tpattern: /((?:(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': {\n\t\tpattern: /[a-z0-9_]+\\(/i,\n\t\tinside: {\n\t\t\tpunctuation: /\\(/\n\t\t}\n\t},\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,\n\t'operator': /[-+]{1,2}|!|<=?|>=?|={1,3}|&{1,2}|\\|?\\||\\?|\\*|\\/|~|\\^|%/,\n\t'ignore': /&(lt|gt|amp);/i,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|function|get|if|implements|import|in|instanceof|interface|let|new|null|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|-?Infinity)\\b/,\n\t'function': /(?!\\d)[a-z0-9_$]+(?=\\()/i\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /<script[\\w\\W]*?>[\\w\\W]*?<\\/script>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /<script[\\w\\W]*?>|<\\/script>/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t},\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (!self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'html': 'markup',\n\t\t\t'svg': 'markup',\n\t\t\t'xml': 'markup',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell'\n\t\t};\n\n\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function(pre) {\n\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [,''])[1];\n\t\t\tvar language = Extensions[extension] || extension;\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t};\n\n\tself.Prism.fileHighlight();\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/prismjs/prism.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}